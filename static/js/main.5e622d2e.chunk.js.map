{"version":3,"sources":["sidebar/util.js","sidebar/optionItem/index.js","sidebar/index.js","context/noteData.context.js","searchInput/index.js","header/HeaderMenuSideBar.js","header/index.js","MainContent/TextEditor/draft.js","MainContent/TextEditor/index.js","commonHoc/onMouseHover.js","MainContent/keepNoteCard/index.js","MainContent/KeepsDataList/index.js","MainContent/index.js","context/NoteProvider.js","localStorage.js","test/index.js","App.js","serviceWorker.js","index.js"],"names":["options","name","icon","faLightbulb","faBell","faPencilAlt","faArchive","faTrash","React","memo","isfirst","isSideBarOpen","setselectedState","className","onClick","delay","from","opacity","to","props","style","SideBar","useState","selectedState","optionsList","map","index","key","NoteContext","createContext","list","addNote","DeleteNote","filterNote","searchValue","doneNotes","addDoneNote","hanelSearch","useContext","faSearch","size","value","placeholder","onChange","event","target","faRedo","faListAlt","faCog","togglemenu","faBars","src","alt","width","height","emojiPlugin","createEmojiPlugin","useNativeArt","EmojiSuggestions","plugins","EmojiSelect","SimpleEmojiEditor","state","editorState","createEditorStateWithText","setState","focus","editor","setTimeout","prevpro","prevState","this","setinputValue","getCurrentContent","getPlainText","EditorState","createEmpty","ref","element","autoFocus","Component","TextEditor","isFocused","setisFocused","imageUrl","setimageUrl","inputValue","inputFileRef","createRef","removeFocusInput","onFocus","onBlur","onKeyDown","e","scrollHeight","type","files","reader","FileReader","file","onloadend","URL","createObjectURL","readAsDataURL","id","href","preventDefault","current","click","faImage","desc","marginLeft","MouseOver","onmouseOver","setonmouseOver","onMouseEnter","onMouseLeave","render","KeepNoteCard","title","handleDelete","handleDoneChange","isActive","whiteSpace","defaultProps","PropTypes","number","isRequired","ListTransition","items","keys","item","enter","leave","KeepsDataList","filter","toLowerCase","includes","doneNotesList","length","MainContent","NoteProvider","children","noteInitState","changeState","uniqueId","deleteId","isDoneNote","note","noteDetails","serializedState","localStorage","getItem","JSON","parse","err","loadState","noteState","stringify","setItem","saveState","Provider","TestComponent","Consumer","display","contextType","App","setisSideBarOpen","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5e622d2e.chunk.js","sourcesContent":["import {\n  faLightbulb,\n  faBell,\n  faPencilAlt,\n  faArchive,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst options = [\n  {\n    name: \"Notes\",\n    icon: faLightbulb,\n  },\n  {\n    name: \"Reminder\",\n    icon: faBell,\n  },\n  {\n    name: \"Edit labels\",\n    icon: faPencilAlt,\n  },\n  {\n    name: \"Archive\",\n    icon: faArchive,\n  },\n  {\n    name: \"Trash\",\n    icon: faTrash,\n  },\n];\n\nexport default options;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Spring } from \"react-spring/renderprops\";\n\nimport \"./index.css\";\n\nconst OptionItem = ({\n  name,\n  icon,\n  isfirst,\n  isSideBarOpen,\n  setselectedState,\n}) => {\n  return (\n    <div\n      className={`option-item ${isfirst && \"option-item-active\"}`}\n      onClick={setselectedState}\n    >\n      <span className=\"option-item__icon\">\n        <FontAwesomeIcon icon={icon} />\n      </span>\n      {isSideBarOpen && (\n        <Spring delay={300} from={{ opacity: 0 }} to={{ opacity: 1 }}>\n          {(props) => (\n            <span style={props} className=\"option-item__name\">\n              {name}\n            </span>\n          )}\n        </Spring>\n      )}\n    </div>\n  );\n};\n\nOptionItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  isfirst: PropTypes.bool.isRequired,\n  isSideBarOpen: PropTypes.bool.isRequired,\n  setselectedState: PropTypes.func.isRequired,\n};\n\nexport default React.memo(OptionItem, () => false);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport options from \"./util\";\nimport OptionItem from \"./optionItem\";\n\nconst SideBar = ({ isSideBarOpen }) => {\n  const [selectedState, setselectedState] = useState(0);\n  const optionsList = options.map(({ name, icon }, index) => {\n    return (\n      <OptionItem\n        key={name}\n        name={name}\n        icon={icon}\n        isfirst={index === selectedState}\n        isSideBarOpen={isSideBarOpen}\n        setselectedState={() => setselectedState(index)}\n      />\n    );\n  });\n\n  return <div>{optionsList}</div>;\n};\n\nSideBar.propTypes = {\n  isSideBarOpen: PropTypes.bool.isRequired,\n};\n\nexport default SideBar;\n","import { createContext } from \"react\";\n\nconst NoteContext = createContext({\n  list: [],\n  addNote: () => {},\n  DeleteNote: () => {},\n  filterNote: () => {},\n  searchValue: \"\",\n  doneNotes: [],\n  addDoneNote: () => {},\n  hanelSearch: () => {},\n});\n\nexport default NoteContext;\n","import React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./index.css\";\nimport NoteContext from \"../context/noteData.context\";\n\nconst SearchInput = (props) => {\n  const { searchValue, hanelSearch } = useContext(NoteContext);\n\n  const handleSearch = (event) => {\n    hanelSearch(event.target.value);\n  };\n\n  return (\n    <form>\n      <div className=\"search-input\">\n        <span className=\"search-input__icon\">\n          <FontAwesomeIcon icon={faSearch} size=\"1x\" />\n        </span>\n        <input\n          value={searchValue}\n          placeholder=\"Search\"\n          className=\"search-input__input\"\n          onChange={handleSearch}\n        />\n      </div>\n    </form>\n  );\n};\n\nSearchInput.propTypes = {};\n\nexport default React.memo(SearchInput);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog, faRedo, faListAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst HeaderMenuSideBar = () => {\n  return (\n    <div className=\"sidebar-icon\">\n      <span className=\"header-menu__icons\">\n        <FontAwesomeIcon icon={faRedo} size=\"1x\" />\n      </span>\n\n      <span className=\"header-menu__icons\">\n        <FontAwesomeIcon icon={faListAlt} size=\"1x\" />\n      </span>\n\n      <span className=\"header-menu__icons\">\n        <FontAwesomeIcon icon={faCog} size=\"1x\" />\n      </span>\n    </div>\n  );\n};\n\nHeaderMenuSideBar.propTypes = {};\n\nexport default React.memo(HeaderMenuSideBar);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./index.css\";\nimport SearchInput from \"../searchInput\";\nimport HeaderMenuSideBar from \"./HeaderMenuSideBar\";\n\nconst HeaderMenu = ({ togglemenu }) => {\n  return (\n    <header>\n      <div className=\"main-header\">\n        <div className=\"small-menu\">\n          <a className=\"header-menu__icons\" onClick={togglemenu}>\n            <FontAwesomeIcon icon={faBars} size=\"1x\" />\n          </a>\n          <div className=\"logo\">\n            <img\n              src=\"https://www.gstatic.com/images/branding/product/1x/keep_48dp.png\"\n              alt=\"logo\"\n              width=\"40\"\n              height=\"40\"\n            />\n          </div>\n          <h3>Keep</h3>\n        </div>\n        <SearchInput />\n        <HeaderMenuSideBar />\n      </div>\n    </header>\n  );\n};\n\nHeaderMenu.propTypes = {\n  togglemenu: PropTypes.func.isRequired,\n};\n\nexport default React.memo(HeaderMenu, () => false);\n","import React, { Component } from \"react\";\nimport Editor, { createEditorStateWithText } from \"draft-js-plugins-editor\";\n\nimport createEmojiPlugin from \"draft-js-emoji-plugin\";\n\nimport \"./editorStyles.css\";\nimport \"draft-js/dist/Draft.css\";\nimport \"draft-js-emoji-plugin/lib/plugin.css\";\nimport { EditorState } from \"draft-js\";\n\nconst emojiPlugin = createEmojiPlugin({\n  useNativeArt: true,\n});\nconst { EmojiSuggestions, EmojiSelect } = emojiPlugin;\nconst plugins = [emojiPlugin];\nconst text = ``;\n\nexport default class SimpleEmojiEditor extends Component {\n  state = {\n    editorState: createEditorStateWithText(text),\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.editor.focus();\n    }, 0);\n  }\n\n  componentDidUpdate(prevpro, prevState) {\n    if (this.state.editorState !== prevState.editorState) {\n      this.props.setinputValue(\n        this.state.editorState.getCurrentContent().getPlainText(\"\")\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      editorState: EditorState.createEmpty(\"\"),\n    });\n  }\n\n  onChange = (editorState) => {\n    this.setState({\n      editorState,\n    });\n  };\n\n  focus = () => {\n    this.editor.focus();\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"editor\" onClick={this.focus}>\n          <Editor\n            editorState={this.state.editorState}\n            onChange={this.onChange}\n            plugins={plugins}\n            ref={(element) => {\n              this.editor = element;\n            }}\n            placeholder=\"enter note!!\"\n            autoFocus\n          />\n          <EmojiSuggestions />\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faImage,\n  faEdit,\n  faCheckSquare,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./index.css\";\nimport NoteContext from \"./../../context/noteData.context\";\nimport SimpleResizeableEditor from \"./draft\";\n\nconst TextEditor = () => {\n  const [isFocused, setisFocused] = useState(false);\n  const [imageUrl, setimageUrl] = useState(\"\");\n  const [inputValue, setinputValue] = useState(\"\");\n  const inputFileRef = React.createRef();\n  const onFocus = () => {\n    setisFocused(true);\n  };\n  const onBlur = () => {\n    setisFocused(false);\n  };\n\n  const handleKeyDown = (e) => {\n    e.target.style.height = \"inherit\";\n    e.target.style.height = `${e.target.scrollHeight}px`;\n    // In case you have a limitation\n    // e.target.style.height = `${Math.min(e.target.scrollHeight, limit)}px`;\n  };\n\n  const onImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      let file = event.target.files[0];\n\n      reader.onloadend = () => {\n        setimageUrl(URL.createObjectURL(file));\n        setisFocused(true);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleImageUpload = (e) => {\n    e.preventDefault();\n    inputFileRef.current.click();\n    //\n  };\n\n  const removeFocusInput = () => {\n    setisFocused(false);\n    setimageUrl(\"\");\n  };\n\n  const { addNote } = useContext(NoteContext);\n\n  const saveNote = () => {\n    addNote({\n      imageUrl,\n      desc: inputValue,\n    });\n    setinputValue(\"\");\n    setisFocused(false);\n    setimageUrl(\"\");\n  };\n\n  const handleChange = (e) => {\n    setinputValue(e.target.value);\n  };\n\n  return (\n    <div className=\"center\">\n      <div\n        className={` editor ${\n          isFocused ? \"text-editor text-block-editor\" : \"text-editor\"\n        } `}\n      >\n        {isFocused && (\n          <button className=\"close-btn\" onClick={removeFocusInput}>\n            X\n          </button>\n        )}\n        <div>\n          {imageUrl && (\n            <img alt=\"note\" width=\"100%\" height=\"200\" src={imageUrl} />\n          )}\n          {isFocused ? (\n            <SimpleResizeableEditor setinputValue={setinputValue} />\n          ) : (\n            <input\n              placeholder=\"Take a note...\"\n              onFocus={onFocus}\n              onBlur={onBlur}\n              onKeyDown={handleKeyDown}\n              value={inputValue}\n              onChange={handleChange}\n            />\n          )}\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"text-editor-icon\">\n            {/* <span className=\"text-editor__icons\">\n              <FontAwesomeIcon icon={faCheckSquare} size=\"lg\" />\n            </span>{\" \"}\n            <span className=\"text-editor__icons\">\n              <FontAwesomeIcon icon={faEdit} size=\"lg\" />\n            </span> */}\n            <span className=\"text-editor__icons\">\n              <input\n                ref={inputFileRef}\n                type=\"file\"\n                onChange={onImageChange}\n                className=\"filetype d-none\"\n                id=\"group_image\"\n              />\n              <a href=\"#\" onClick={handleImageUpload}>\n                <FontAwesomeIcon icon={faImage} size=\"lg\" />\n              </a>\n            </span>\n          </div>\n          {isFocused && (\n            <div>\n              {(inputValue || imageUrl) && (\n                <button className=\"btn\" onClick={saveNote}>\n                  save\n                </button>\n              )}\n              <button\n                className=\"btn\"\n                style={{ marginLeft: \"10px\" }}\n                onClick={removeFocusInput}\n              >\n                cancel\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TextEditor;\n","import React, { useState } from \"react\";\n\nconst MouseOver = (props) => {\n  const [onmouseOver, setonmouseOver] = useState(false);\n\n  const handleMouseOver = () => {\n    setonmouseOver(true);\n  };\n  return (\n    <div\n      onMouseEnter={handleMouseOver}\n      onMouseLeave={() => setonmouseOver(false)}\n    >\n      {props.render(onmouseOver)}\n    </div>\n  );\n};\n\nexport default MouseOver;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./index.css\";\nimport MouseOver from \"../../commonHoc/onMouseHover\";\n\nfunction createMarkup(dec) {\n  return { __html: dec };\n}\n\nconst KeepNoteCard = ({\n  title,\n  desc,\n  DeleteNote,\n  id,\n  addDoneNote,\n  imageUrl,\n  doneNotes,\n}) => {\n  const handleDelete = () => DeleteNote(id, doneNotes);\n  const handleDoneChange = () => addDoneNote({ title, desc, id, imageUrl });\n  return (\n    <MouseOver\n      render={(isActive) => {\n        return (\n          <div className={`note-card ${isActive && \"note-card-hover\"} `}>\n            <div\n              className=\"d-flex justify-content-center mb-2 \"\n              style={{ whiteSpace: \"pre-wrap\" }}\n            >\n              <div className=\"note-card__title\">\n                <strong>{title}</strong>\n              </div>\n              <div>\n                <a href=\"#\" onClick={handleDelete} className=\"note-card-icon\">\n                  <FontAwesomeIcon icon={faTrash} />\n                </a>\n                <span className=\"note-card-icon\">\n                  {!doneNotes && (\n                    <input type=\"checkbox\" onChange={handleDoneChange} />\n                  )}\n                </span>\n              </div>\n            </div>\n            <div className=\"display-linebreak\">{desc}</div>\n\n            {imageUrl && (\n              <img height=\"130\" width=\"100%\" alt=\"note\" src={imageUrl} />\n            )}\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nKeepNoteCard.propTypes = {\n  DeleteNote: PropTypes.func.isRequired,\n  addDoneNote: PropTypes.func.isRequired,\n  desc: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string,\n  doneNotes: PropTypes.bool,\n};\nKeepNoteCard.defaultProps = {\n  desc: \"\",\n  id: PropTypes.number.isRequired,\n  imageUrl: \"\",\n  title: \"\",\n  doneNotes: false,\n};\n\nexport default KeepNoteCard;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Transition } from \"react-spring/renderprops\";\n\nimport KeepNoteCard from \"../keepNoteCard\";\nimport \"./index.css\";\nimport NoteContext from \"../../context/noteData.context\";\n\nconst ListTransition = ({ list, DeleteNote, addDoneNote, doneNotes }) => {\n  return (\n    <Transition\n      items={list}\n      keys={(item) => item.id}\n      from={{ opacity: 0 }}\n      enter={{ opacity: 1 }}\n      leave={{ opacity: 0 }}\n    >\n      {(item) => (props) => (\n        <div style={props} key={item.id}>\n          <KeepNoteCard\n            {...item}\n            key={item.id}\n            DeleteNote={DeleteNote}\n            addDoneNote={addDoneNote}\n            doneNotes={doneNotes}\n          />\n        </div>\n      )}\n    </Transition>\n  );\n};\n\nListTransition.propTypes = {\n  DeleteNote: PropTypes.func.isRequired,\n  addDoneNote: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(PropTypes.string).isRequired,\n  doneNotes: PropTypes.bool,\n};\n\nListTransition.defaultProps = {\n  doneNotes: false,\n};\n\nconst KeepsDataList = (props) => {\n  const { DeleteNote, addDoneNote, searchValue } = useContext(NoteContext);\n\n  let { list, doneNotes } = useContext(NoteContext);\n\n  if (searchValue) {\n    list = list.filter((item) => item.desc.toLowerCase().includes(searchValue));\n\n    doneNotes = doneNotes.filter((item) =>\n      item.desc.toLowerCase().includes(searchValue)\n    );\n  }\n\n  let doneNotesList = null;\n  if (doneNotes && doneNotes.length) {\n    doneNotesList = (\n      <>\n        <span className=\"list-title\">\n          <strong>done Notes</strong>\n        </span>\n        <div className=\"note-card-list\">\n          <ListTransition\n            list={doneNotes}\n            DeleteNote={DeleteNote}\n            addDoneNote={addDoneNote}\n            doneNotes\n          />\n          <br />\n        </div>\n      </>\n    );\n  }\n  return (\n    <>\n      {doneNotesList}\n\n      {!!list.length && (\n        <span className=\"list-title\">\n          <strong>all Notes</strong>\n        </span>\n      )}\n      <div className=\"note-card-list\">\n        <ListTransition\n          list={list}\n          DeleteNote={DeleteNote}\n          addDoneNote={addDoneNote}\n        />\n      </div>\n    </>\n  );\n};\n\nKeepsDataList.propTypes = {};\n\nexport default KeepsDataList;\n","import React from \"react\";\nimport \"./index.css\";\nimport TextEditor from \"./TextEditor\";\nimport KeepsDataList from \"./KeepsDataList\";\n\nconst MainContent = () => {\n  return (\n    <main>\n      <div className=\"keep-main\">\n        <TextEditor />\n        <KeepsDataList />\n      </div>\n    </main>\n  );\n};\n\nexport default MainContent;\n","import React, { useState } from \"react\";\nimport NoteContext from \"../context/noteData.context\";\nimport { saveState, loadState } from \"../localStorage\";\n\nconst NoteProvider = ({ children }) => {\n  const addDoneNote = (noteDetails) => {\n    changeState((prevState) => ({\n      ...prevState,\n      doneNotes: [...prevState.doneNotes, noteDetails],\n      list: prevState.list.filter((note) => noteDetails.id !== note.id),\n    }));\n  };\n\n  const filterNote = () => {\n    //\n  };\n\n  const DeleteNote = (deleteId, isDoneNote = false) => {\n    if (isDoneNote) {\n      changeState((prevState) => ({\n        ...prevState,\n        doneNotes: prevState.doneNotes.filter((note) => note.id !== deleteId),\n      }));\n      return;\n    }\n    changeState((prevState) => ({\n      ...prevState,\n      list: prevState.list.filter((note) => note.id !== deleteId),\n    }));\n  };\n\n  const addNote = (value) => {\n    changeState((prevState) => ({\n      ...prevState,\n      list: [...prevState.list, { ...value, id: prevState.uniqueId }],\n      uniqueId: prevState.uniqueId + 1,\n    }));\n  };\n\n  const hanelSearch = (value) => {\n    changeState((prevState) => ({\n      ...prevState,\n      searchValue: value,\n    }));\n  };\n\n  const noteInitState = {\n    list: [],\n    addNote,\n    DeleteNote,\n    filterNote,\n    searchValue: \"\",\n    doneNotes: [],\n    addDoneNote,\n    uniqueId: 1,\n    hanelSearch,\n    ...loadState(),\n  };\n\n  const [noteState, changeState] = useState(noteInitState);\n\n  saveState(noteState);\n  return (\n    <NoteContext.Provider value={noteState}>{children}</NoteContext.Provider>\n  );\n};\n\nexport default NoteProvider;\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n","import React, { Component } from \"react\";\nimport NoteContext from \"../context/noteData.context\";\n\nexport default class TestComponent extends Component {\n  static contextType = NoteContext;\n\n  render() {\n    return (\n      <NoteContext.Consumer>\n        {({ searchValue, hanelSearch }) => {\n          const handleSearch = (event) => {\n            hanelSearch(event.target.value);\n          };\n\n          return (\n            <input\n              value={searchValue}\n              placeholder=\"Search\"\n              className=\"search-input__input\"\n              onChange={handleSearch}\n              style={{ display: \"none\" }}\n            />\n          );\n        }}\n      </NoteContext.Consumer>\n    );\n  }\n}\n\n// import React, { useContext } from \"react\";\n// import NoteContext from \"../context/noteData.context\";\n\n// const SearchInput = (props) => {\n//   const aa = useContext(NoteContext);\n//   console.log(\"SearchInput -> searchValue:\", aa);\n\n//   return \"pjpo\";\n// };\n\n// SearchInput.propTypes = {};\n\n// export default React.memo(SearchInput);\n","import React, { useState } from \"react\";\nimport SideBar from \"./sidebar\";\nimport { Spring } from \"react-spring/renderprops\";\n\nimport Header from \"./header\";\nimport MainContent from \"./MainContent\";\nimport NoteProvider from \"./context/NoteProvider\";\nimport TestComponent from \"./test/index\";\n\nconst App = () => {\n  const [isSideBarOpen, setisSideBarOpen] = useState(true);\n\n  const togglemenu = () => setisSideBarOpen(!isSideBarOpen);\n\n  return (\n    <div className=\"App\">\n      <NoteProvider>\n        <TestComponent />\n\n        <Header togglemenu={togglemenu} isSideBarOpen={isSideBarOpen} />\n        <div className=\"d-flex\">\n          <Spring\n            from={{ width: isSideBarOpen ? \"5%\" : \"15%\" }}\n            to={{ width: !isSideBarOpen ? \"5%\" : \"15%\" }}\n          >\n            {(props) => (\n              <div style={props}>\n                <SideBar isSideBarOpen={isSideBarOpen} />\n              </div>\n            )}\n          </Spring>\n\n          <div style={{ width: isSideBarOpen ? \"95%\" : \"85%\" }}>\n            <MainContent />\n          </div>\n        </div>\n      </NoteProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}